{"mappings":"AAAA,uDAAuD;AACvD,MAAM,cAAc,IAAI,YAAY;IAChC,WAAW;IACX,WAAW;IACX,cAAc;IACd,eAAe;IACf,OAAO;IACP,0BAA0B;AAC9B;AAEA,SAAS,cAAc,CAAC,SAAS,gBAAgB,CAAC,SAAS;IACvD,YAAY,cAAc,GAAG,KAAK,CAAC,SAAU,KAAK;QAC9C,QAAQ,KAAK,CAAC,uBAAuB;IACzC;AACJ;AAEA,wEAAwE;AACxE,YAAY,sBAAsB,GAAG,IAAI,CAAC;IACtC,OAAO,QAAQ,GAAG;AACtB,GAAG,KAAK,CAAC,SAAU,KAAK;IACpB,QAAQ,KAAK,CAAC,qCAAqC;AACvD","sources":["public/auth.js"],"sourcesContent":["// Assuming oidc-client-ts exposes UserManager globally\r\nconst userManager = new UserManager({\r\n    authority: 'http://localhost:4000',\r\n    client_id: 'csca-client',\r\n    redirect_uri: 'http://localhost:3000/callback',\r\n    response_type: 'code',\r\n    scope: 'openid profile',\r\n    post_logout_redirect_uri: 'http://localhost:3000',\r\n});\r\n\r\ndocument.getElementById('login').addEventListener('click', () => {\r\n    userManager.signinRedirect().catch(function (error) {\r\n        console.error('Error during login:', error);\r\n    });\r\n});\r\n\r\n// Check if we're returning from the OIDC provider with a login response\r\nuserManager.signinRedirectCallback().then(function () {\r\n    window.location = '/';\r\n}).catch(function (error) {\r\n    console.error('Error handling redirect callback:', error);\r\n});\r\n"],"names":[],"version":3,"file":"index.f04db4a3.js.map","sourceRoot":"/__parcel_source_root/"}